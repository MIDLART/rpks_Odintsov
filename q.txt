Сетевое взаимодействие клиент-сервер в Java

В Java для работы с сетью используют пакет java.net.
Основные классы — Socket и ServerSocket для TCP.
Клиент создает Socket с адресом и портом сервера. Сервер слушает порт через ServerSocket и принимает соединения.
Для UDP берут DatagramSocket и DatagramPacket.

Еще есть URL и URLConnection для HTTP-запросов.
В современных приложениях часто используют HttpClient. Он асинхронный и поддерживает HTTP/2.

Spring Security

Spring Security настраивает доступ к приложению.
Аутентификация проверяет кто пользователь. Авторизация решает что он может.
Основные аннотации — @Secured, @PreAuthorize, @PostAuthorize.

CORS разрешает запросы с других доменов.
CSRF защищает от подделки запросов.
Формы авторизации — Basic, OAuth2, JWT. Basic передает логин и пароль в заголовке.
OAuth2 и JWT работают через токены.

FilterChain обрабатывает запросы перед контроллером.
AuthenticationManager проверяет учетные данные.
AuthenticationProvider содержит логику аутентификации.
UserDetailsService загружает данные пользователя.